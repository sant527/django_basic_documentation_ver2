# Generated by Django 2.2.6 on 2019-10-15 17:47

import custom_user.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('password', models.CharField(default='pbkdf2_sha256$150000$MHoY0aLcK4Rr$zs1gEGrgoL3QvAC5MafW+C9AlwjBaF+md0iEocOA9IQ=', max_length=128, verbose_name='password')),
                ('recentdate_login_via_passwd', models.DateTimeField(blank=True, null=True, verbose_name='last login via password')),
                ('recentdate_login_via_otp', models.DateTimeField(blank=True, null=True, verbose_name='last login via otp')),
                ('recentdate_password_change', models.DateTimeField(blank=True, null=True, verbose_name='last password change')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(error_messages={'unique': 'This email already exists.'}, help_text='Please Enter valid Email Address', max_length=254, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('recent_otp_used_for_pass_change', models.CharField(help_text='Please Enter valid OTP sent to your Email', max_length=6, validators=[django.core.validators.RegexValidator('^\\d{6}$', code='invalid', message='OTP shoud be of 6 digits')], verbose_name='otp')),
                ('date_of_recent_otp_used_for_pass_change', models.DateTimeField(null=True)),
                ('otp_used_while_passlogin_create', models.CharField(help_text='Please Enter valid OTP sent to your Email', max_length=6, validators=[django.core.validators.RegexValidator('^\\d{6}$', code='invalid', message='OTP shoud be of 6 digits')], verbose_name='otp')),
                ('date_of_otp_used_while_passlogin_create', models.DateTimeField(null=True)),
                ('first_otp_used_for_otplogin', models.CharField(help_text='Please Enter valid OTP sent to your Email', max_length=6, validators=[django.core.validators.RegexValidator('^\\d{6}$', code='invalid', message='OTP shoud be of 6 digits')], verbose_name='otp')),
                ('date_of_first_otp_used_for_otplogin', models.DateTimeField(null=True)),
                ('about', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified date')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('last_login2', models.DateTimeField(blank=True, verbose_name='last login 2')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', custom_user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActionTypeForUserSessionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserSessionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.EmailField(max_length=254)),
                ('otp_used_for_pass_change', models.CharField(help_text='Please Enter valid OTP sent to your Email', max_length=6, validators=[django.core.validators.RegexValidator('^\\d{6}$', code='invalid', message='OTP shoud be of 6 digits')], verbose_name='otp')),
                ('otp_used_while_passlogin_create', models.CharField(help_text='Please Enter valid OTP sent to your Email', max_length=6, validators=[django.core.validators.RegexValidator('^\\d{6}$', code='invalid', message='OTP shoud be of 6 digits')], verbose_name='otp')),
                ('otp_used_for_otplogin', models.CharField(help_text='Please Enter valid OTP sent to your Email', max_length=6, validators=[django.core.validators.RegexValidator('^\\d{6}$', code='invalid', message='OTP shoud be of 6 digits')], verbose_name='otp')),
                ('device_type', models.CharField(max_length=255)),
                ('ip_address', models.GenericIPAddressField()),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('action_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='custom_user.ActionTypeForUserSessionLog')),
                ('user', models.ForeignKey(on_delete=models.SET(custom_user.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
